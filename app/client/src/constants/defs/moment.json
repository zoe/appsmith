{
    "!name": "LIB/moment",
    "moment": {
        "!type": "fn(inp?: MomentInput, format?: MomentFormatSpecification, strict?: boolean) -> Moment",
        "!url": "https://momentjs.com/docs/#/parsing/",
        "!doc": "Returns a wrapper for the Date object",
        "now": {
            "!type": "fn() -> number",
            "!doc": "Returns unix time in milliseconds."
        },
        "version": {
            "!type": "string"
        },
        "invalid": {
            "!type": "fn(flags?: MomentParsingFlagsOpt) -> Moment",
            "!url": "https://momentjs.com/docs/#/utilities/invalid/",
            "!doc": "Create your own invalid Moment objects"
        },
        "isMoment": {
            "!type": "fn(m: any) -> bool",
            "!url": "https://momentjs.com/docs/#/query/is-a-moment/",
            "!doc": "To check if a variable is a moment object"
        },
        "isDate": {
            "!type": "fn(m: any) -> bool",
            "!url": "https://momentjs.com/docs/#/query/is-a-date/",
            "!doc": "To check if a variable is a native js Date object"
        },
        "isDuration": {
            "!type": "fn(m: any) -> bool",
            "!url": "https://momentjs.com/docs/#/durations/is-a-duration/",
            "!doc": "To check if a variable is a moment duration object"
        },
        "locale": {
            "!type": "fn(language?: string, definition?: LocaleSpecification|void) -> string",
            "!url": "https://momentjs.com/docs/#/i18n/changing-locale/",
            "!doc": "To load a locale, pass the key and the string values to moment.locale"
        },
        "localeData": {
            "!type": "fn(key?: string|[string]) -> Locale",
            "!url": "https://momentjs.com/docs/#/i18n/locale-data/",
            "!doc": "Returns the current locale or a locale with the given key"
        },
        "duration": {
            "!type": "fn(inp?: DurationInputArg1, unit?: DurationInputArg2) -> Duration",
            "!url": "https://momentjs.com/docs/#/durations/creating/",
            "!doc": "To create a duration, call moment.duration() with the length of time in milliseconds"
        },
        "parseZone": {
            "!type": "fn(inp?: MomentInput, format?: MomentFormatSpecification, language?: string, strict?: boolean) -> Moment"
        },
        "months": {
            "!type": "fn(format: string, index: number) -> string",
            "!url": "https://momentjs.com/docs/#/get-set/month/",
            "!doc": "Gets or sets the month."
        },
        "monthsShort": {
            "!type": "fn(format?: string, index?: number) -> string|[string]",
            "!url": "https://momentjs.com/docs/#/customization/month-abbreviations/",
            "!doc": "Returns abbreviated month names"
        },
        "weekdays": {
            "!type": "fn(localeSorted?: bool, format?: string, index?: number) -> string|[string]",
            "!url": "https://momentjs.com/docs/#/customization/weekday-names/"
        },
        "weekdaysShort": {
            "!type": "fn(localeSorted?: bool, format?: string, index?: number) -> string|[string]",
            "!url": "https://momentjs.com/docs/#/customization/weekday-abbreviations/",
            "!doc": "Returns abbreviated weekday names"
        },
        "weekdaysMin": {
            "!type": "fn(localeSorted?: bool, format?: string, index?: number) -> string|[string]",
            "!url": "https://momentjs.com/docs/#/customization/weekday-abbreviations/",
            "!doc": "Returns abbreviated weekday names"
        },
        "min": {
            "!type": "fn(moments: [Moment]) -> Moment",
            "!url": "https://momentjs.com/docs/#/get-set/min/",
            "!doc": "Returns the minimum (most distant past) of the given moment instances"
        },
        "max": {
            "!type": "fn(moments: [Moment]) -> Moment",
            "!url": "https://momentjs.com/docs/#/get-set/max/",
            "!doc": "Returns the maximum (most distant future) of the given moment instances"
        },
        "defineLocale": {
            "!type": "fn(language: string, localeSpec: LocaleSpecification|void) -> Locale",
            "!url": "https://momentjs.com/docs/#/customization/",
            "!doc": "Create a locale that inherits from a parent locale"
        },
        "updateLocale": {
            "!type": "fn(language: string, localeSpec: LocaleSpecification|void) -> Locale",
            "!url": "https://momentjs.com/docs/#/customization/",
            "!doc": "Update a locale's properties"
        },
        "locales": {
            "!type": "fn() -> [string]",
            "!url": "https://momentjs.com/docs/#/i18n/getting-locale/",
            "!doc": "List all locales that have been loaded and are available to use"
        },
        "normalizeUnits": {
            "!type": "fn(unit: ?) -> string",
            "!url": "https://momentjs.com/docs/#/utilities/normalize-units/",
            "!doc": "If you're extending the library, you may want access to Moment's facilities for that in order to better align your functionality with Moment's"
        },
        "relativeTimeThreshold": {
            "!type": "fn(threshold: string) -> number|bool",
            "!url": "https://momentjs.com/docs/#/customization/relative-time-threshold/"
        },
        "calendarFormat": {
            "!type": "fn(m: Moment, now: Moment) -> string",
            "!url": "https://momentjs.com/docs/#/customization/calendar-format/",
            "!doc": "Lets you modify the tokens used by calendar"
        },
        "parseTwoDigitYear": {
            "!type": "fn(input: string) -> number",
            "!url": "https://momentjs.com/docs/#/parsing/string-format/"
        }
    }  
}